import Control from '../../common/control';
import { parsePath, tags, toAbsolute, unParse } from './pathParser';

export class SEditor extends Control{
  constructor(parentNode: HTMLElement) {
    super(parentNode, 'div', '');
    let sview = new SView(this.node);

    let pathData = sview.editable.getAttribute('d');
    //pathData = pathData.split('-').join(' -');
    let res = parsePath(pathData);
    let ab = toAbsolute(res);
    console.log(ab);
    ab.forEach(it=>{
      console.log(it)
      //if (it.tag=='M'){
        let lx = 0;
        let ly = 0;
        for (let i = 0; i< tags.get(it.tag)/2; i++){
          
          sview.addPoint(it.args[0 + i*2] ?? lx, it.args[1+ i*2] ?? ly, i==tags.get(it.tag)/2-1? 'green':'red', (x,y)=>{
            it.args[0 + i*2] = x;
            it.args[1+ i*2] = y;
            sview.editable.setAttribute('d', unParse(ab));
          });
          lx = it.args[0 + i*2];
          ly = it.args[1+ i*2];
        }
          //
     // } else {

      //}
    });
  }  
}

export class SView extends Control {
  editable: SVGPathElement;
  svg: SVGElement;
  constructor(parentNode: HTMLElement) {
    super(parentNode, 'div', '',);
    let sv =  `
    <svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 viewBox="0 0 822.000000 1280.000000"
 preserveAspectRatio="xMidYMid meet">
      <g class ="all_image" transform="translate(0.000000,1280.000000) scale(0.100000,-0.100000)"
      stroke="none">
    <path class="a" d="M3362 12652 c-13 -601 -227 -1121 -671 -1630 -129 -149 -235 -255
    -566 -567 -447 -422 -581 -563 -741 -775 -194 -257 -321 -513 -393 -793 -83
    -323 -82 -757 4 -1153 30 -137 29 -124 8 -124 -44 0 -127 66 -259 205 -190
    200 -249 232 -315 169 -38 -36 -37 -42 37 -229 153 -382 366 -720 678 -1074
    110 -125 436 -446 601 -592 72 -63 274 -238 450 -389 406 -350 514 -447 706
    -641 743 -748 1083 -1478 1140 -2445 6 -104 14 -196 18 -204 11 -22 200 -96
    306 -120 350 -80 813 -63 1108 39 81 28 177 72 177 81 0 32 -35 316 -56 450
    -179 1165 -665 2017 -1652 2892 -79 70 -254 221 -389 335 -586 494 -802 689
    -1001 903 -401 431 -605 803 -666 1215 -80 535 40 1028 363 1494 111 161 223
    295 541 651 217 244 339 396 444 553 321 481 397 949 250 1532 -28 112 -105
    345 -113 345 -3 0 -7 -58 -9 -128z"/>

    </g>
    </svg>
   `;

   let sv1 =`<svg aria-hidden="true" data-prefix="fas" data-icon="paw" class="svg-inline--fa fa-paw fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><g class="all_image"><path class="a" fill="currentColor" 
   d="M256 224c-79.41 0-192 122.76-192 200.25 0 34.9 26.81 55.75 71.74 55.75 48.84 0 81.09-25.08 120.26-25.08 39.51 0 71.85 25.08 120.26 25.08 44.93 0 71.74-20.85 71.74-55.75C448 346.76 335.41 224 256 224zm-147.28-12.61c-10.4-34.65-42.44-57.09-71.56-50.13-29.12 6.96-44.29 40.69-33.89 75.34 10.4 34.65 42.44 57.09 71.56 50.13 29.12-6.96 44.29-40.69 33.89-75.34zm84.72-20.78c30.94-8.14 46.42-49.94 34.58-93.36s-46.52-72.01-77.46-63.87-46.42 49.94-34.58 93.36c11.84 43.42 46.53 72.02 77.46 63.87zm281.39-29.34c-29.12-6.96-61.15 15.48-71.56 50.13-10.4 34.65 4.77 68.38 33.89 75.34 29.12 6.96 61.15-15.48 71.56-50.13 10.4-34.65-4.77-68.38-33.89-75.34zm-156.27 29.34c30.94 8.14 65.62-20.45 77.46-63.87 11.84-43.42-3.64-85.21-34.58-93.36s-65.62 20.45-77.46 63.87c-11.84 43.42 3.64 85.22 34.58 93.36z"></path></g></svg>`;
  
   let sv2 =`<svg aria-hidden="true" data-prefix="fas" data-icon="paw" class="svg-inline--fa fa-paw fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><g class="all_image"><path class="a" fill="currentColor" 
   d="M256 224c30.94-8.14 46.42-49.94 34.58-93.36s-46.52-72.01-77.46-63.87-46.42 49.94-34.58 93.36c11.84 43.42 46.53 72.02 77.46 63.87zm281.39-29.34c-29.12-6.96-61.15 15.48-71.56 50.13-10.4 34.65 4.77 68.38 33.89 75.34 29.12 6.96 61.15-15.48 71.56-50.13 10.4-34.65-4.77-68.38-33.89-75.34zm-156.27 29.34c30.94 8.14 65.62-20.45 77.46-63.87 11.84-43.42-3.64-85.21-34.58-93.36s-65.62 20.45-77.46 63.87c-11.84 43.42 3.64 85.22 34.58 93.36z"></path></g></svg>`;
  
   let sv3 =`<svg aria-hidden="true" data-prefix="fas" data-icon="paw" class="svg-inline--fa fa-paw fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><g class="all_image"><path class="a" fill="currentColor" 
   d="M256 224c-29.12-6.96-61.15 15.48-71.56 50.13-10.4 34.65 4.77 68.38 33.89 75.34 29.12 6.96 61.15-15.48 71.56-50.13 10.4-34.65-4.77-68.38-33.89-75.34zm-156.27 29.34c30.94 8.14 65.62-20.45 77.46-63.87 11.84-43.42-3.64-85.21-34.58-93.36s-65.62 20.45-77.46 63.87c-11.84 43.42 3.64 85.22 34.58 93.36z"></path></g></svg>`;

   let sv4 =`<svg aria-hidden="true" data-prefix="fas" data-icon="paw" class="svg-inline--fa fa-paw fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><g class="all_image"><path class="a" fill="currentColor" 
   d="M256 224c30.94-8.14 46.42-49.94 34.58-93.36s-46.52-72.01-77.46-63.87-46.42 49.94-34.58 93.36c11.84 43.42 46.53 72.02 77.46 63.87z"></path></g></svg>`;
  
   let sv5 =`<svg aria-hidden="true" data-prefix="fas" data-icon="paw" class="svg-inline--fa fa-paw fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><g class="all_image"><path class="a" fill="currentColor" 
   d="M256 224c30.94-8.14 46.42-49.94 34.58-93.36s-46.52-72.01-77.46-63.87-46.42 49.94-34.58 93.36c11.84 43.42 46.53 72.02 77.46 63.87zm281.39-29.34c-29.12-6.96-61.15 15.48-71.56 50.13-10.4 34.65 4.77 68.38 33.89 75.34 29.12 6.96 61.15-15.48 71.56-50.13 10.4-34.65-4.77-68.38-33.89-75.34z"></path></g></svg>`;
  
   let sv6 =`<svg aria-hidden="true" data-prefix="fas" data-icon="paw" class="svg-inline--fa fa-paw fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 812 712"><g transform=" scale(0.0500000, 0.050000)" class="all_image"><path class="a" fill="currentColor" 
   d="M9275 12791 c-108 -28 -252 -149 -297 -247 -35 -76 -30 -191 11 -314 18 -52 41 -135 51 -185 34 -164 61 -216 165 -321 36 -35 65 -70 65 -77 0 -7 -9 -42 -19 -79 -21 -73 -37 -192 -46 -338 -9 -147 -24 -225 -47 -250 -38 -40 -106 -64 -189 -65 -73 -1 -83 -4 -205 -66 -72 -36 -130 -71 -131 -79 -1 -8 -7 -55 -14 -103 l-11 -89 -72 -72 c-39 -40 -91 -86 -116 -102 -87 -55 -118 -84 -143 -136 -34 -68 -150 -213 -193 -241 -21 -14 -44 -43 -60 -77 -44 -93 -164 -229 -277 -314 -47 -35 -51 -36 -135 -36 -88 0 -218 18 -462 64 -74 14 -218 32 -320 41 -249 21 -419 43 -515 65 -45 10 -132 26 -195 35 -152 21 -274 50 -569 139 -280 84 -334 99 -591 157 -313 70 -450 66 -762 -27 -151 -44 -272 -96 -384 -166 -49 -30 -145 -85 -213 -122 -289 -156 -626 -408 -670 -501 -11 -24 -62 -110 -113 -192 -92 -149 -172 -306 -203 -398 -9 -27 -23 -102 -30 -165 -7 -64 -27 -172 -44 -240 -16 -69 -44 -210 -61 -315 -16 -104 -43 -255 -60 -335 -16 -80 -57 -307 -90 -505 -77 -457 -96 -545 -160 -751 -16 -50 -36 -149 -45 -220 -10 -85 -26 -158 -46 -214 -42 -117 -65 -194 -78 -265 -6 -33 -33 -132 -61 -220 -27 -87 -50 -165 -50 -172 0 -7 -31 -75 -70 -149 -44 -87 -70 -148 -70 -169 0 -45 -59 -158 -123 -236 -93 -112 -261 -243 -361 -282 -67 -25 -196 -33 -332 -18 -115 12 -133 16 -334 76 -109 33 -139 38 -230 39 -90 0 -112 -3 -152 -23 -98 -48 -160 -145 -200 -310 -26 -112 -21 -157 27 -227 42 -61 107 -115 270 -226 185 -127 207 -134 451 -144 185 -7 385 7 495 35 112 29 379 152 494 229 149 98 255 211 334 352 35 63 95 158 133 211 96 136 138 233 278 649 67 201 130 381 140 400 28 55 57 159 90 318 21 100 40 163 59 197 35 61 71 90 103 82 58 -15 62 -108 14 -323 -43 -193 -149 -489 -241 -674 -18 -36 -54 -123 -80 -195 -27 -71 -62 -159 -80 -195 -94 -191 -154 -294 -219 -378 -169 -220 -172 -230 -127 -412 16 -69 41 -206 55 -306 19 -134 34 -205 60 -275 19 -52 44 -140 55 -196 21 -98 39 -156 96 -306 42 -113 74 -296 89 -523 17 -236 37 -321 88 -379 37 -43 152 -100 233 -115 33 -6 203 -14 378 -17 358 -7 334 -12 384 75 57 97 50 168 -27 285 -81 124 -114 150 -246 193 -64 21 -127 46 -141 58 -56 44 -159 309 -246 636 -36 137 -41 168 -41 265 l-1 110 97 286 c123 365 209 584 258 656 21 32 80 103 130 158 50 55 174 217 276 360 466 656 584 809 612 791 29 -17 45 -73 50 -166 5 -115 -13 -402 -32 -503 -36 -185 -139 -481 -244 -696 -82 -169 -87 -203 -43 -298 18 -37 58 -113 90 -168 81 -138 220 -403 271 -516 96 -215 85 -199 349 -480 187 -198 254 -282 325 -402 62 -106 93 -138 156 -166 120 -53 471 -93 644 -73 100 11 183 41 197 72 26 57 43 90 64 125 14 22 25 46 25 52 0 21 -129 151 -212 213 -45 34 -93 62 -114 66 -20 4 -70 0 -117 -10 -155 -30 -197 -18 -292 86 -117 130 -343 492 -421 677 -93 220 -110 372 -69 621 42 261 91 391 225 596 88 136 304 568 406 814 78 188 108 250 153 307 42 53 60 56 207 34 129 -19 169 -32 256 -87 21 -13 106 -54 190 -90 135 -59 163 -67 243 -75 50 -4 125 -19 168 -33 129 -41 265 -60 390 -53 110 6 110 6 153 -24 49 -33 67 -35 120 -13 59 25 218 29 358 10 138 -20 194 -39 201 -70 2 -11 9 -45 15 -75 15 -78 36 -116 88 -161 l46 -39 -13 -78 c-24 -146 -26 -320 -5 -409 21 -94 24 -293 5 -370 -11 -45 -10 -56 8 -103 14 -34 21 -75 21 -119 0 -37 9 -94 19 -127 10 -33 26 -107 35 -165 11 -72 26 -123 46 -164 27 -53 30 -68 30 -153 0 -118 30 -270 75 -377 36 -89 72 -290 120 -689 14 -114 29 -227 35 -250 15 -67 12 -125 -15 -234 -45 -187 -54 -350 -24 -429 5 -14 22 -42 39 -62 42 -53 58 -138 66 -347 7 -199 -5 -374 -32 -445 -25 -69 -22 -200 6 -275 28 -72 66 -131 115 -173 50 -44 83 -59 177 -82 46 -11 114 -29 151 -39 109 -32 280 -53 434 -55 138 -1 142 0 168 24 56 52 103 186 91 261 -4 22 -20 80 -36 130 -17 49 -30 99 -30 111 0 19 4 20 53 14 28 -3 76 -10 105 -15 91 -17 381 -24 506 -12 109 10 122 13 148 38 50 48 82 127 82 204 1 40 6 73 14 81 23 23 12 46 -51 104 -64 60 -169 123 -242 144 -22 6 -101 15 -176 20 -75 5 -148 15 -162 21 -32 14 -44 46 -50 129 -3 38 -22 116 -46 187 -83 247 -109 456 -77 634 22 127 34 234 46 419 6 85 17 189 25 230 8 41 30 203 50 360 36 302 65 501 90 640 8 47 38 216 65 375 28 160 62 333 76 385 15 52 37 134 50 181 14 53 27 145 34 235 19 249 45 337 131 444 47 58 148 240 355 642 68 131 141 266 164 299 22 32 51 87 64 122 13 34 45 107 72 162 46 97 48 103 52 210 3 72 9 115 17 125 8 8 28 46 46 83 39 83 36 120 -16 228 -43 89 -45 136 -10 169 21 20 25 32 25 85 0 50 5 67 25 95 68 93 112 356 140 845 16 273 22 333 45 416 12 42 11 49 -13 103 -33 72 -33 81 -2 118 30 36 31 47 5 98 -25 49 -25 60 1 109 l20 39 -26 179 c-17 117 -33 192 -46 217 -15 28 -19 49 -14 73 5 30 2 37 -30 65 -86 77 -65 199 63 371 92 122 200 341 231 464 11 46 45 136 75 200 74 157 94 219 111 338 8 55 28 145 45 200 22 69 34 129 37 193 5 86 4 96 -17 124 -17 23 -21 39 -17 67 3 20 15 99 26 176 11 77 35 206 52 286 18 81 29 154 26 163 -9 24 -56 38 -107 33 -25 -2 -85 -23 -134 -46 -50 -23 -102 -45 -117 -48 -34 -7 -121 32 -171 76 -69 60 -423 209 -551 231 -43 8 -164 10 -354 8 l-288 -4 -93 -33 c-132 -47 -157 -43 -301 47 -62 39 -139 81 -170 93 -60 23 -167 33 -216 20z"
   </path></g></svg>`;
   this.node.innerHTML = sv6;

    this.svg = this.node.querySelector<SVGSVGElement>('svg');
    let r = this.svg.getAttribute('viewBox').split(' ');
    let rect = {
      left: Number.parseFloat(r[0]),
      top: Number.parseFloat(r[1]),
      width: Number.parseFloat(r[2]),
      height: Number.parseFloat(r[3])
    }

    const pixel = (value:number)=>{
      return value+'px';
    }
    this.node.style.width = pixel(rect.width);
    this.node.style.height = pixel(rect.height);

    this.editable = this.node.querySelector<SVGPathElement>('.a');
  }

  addPoint(px: number, py: number, color: string, onMove: (x: number, y: number) => void) {
    let main = this.node.querySelector<SVGGElement>('.all_image');
    let marker = new SMarker(main, this.node, px, py, color, onMove);
  }
}

class SMarker {
  constructor(
    parentNode: Node,
    dropNode: HTMLElement,
    px: number,
    py: number,
    color: string,
    onMove: (x: number, y: number) => void
  ) {
    let circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
    circle.setAttribute('cx', px.toString());
    circle.setAttribute('cy', py.toString());
    circle.setAttribute('r', 150..toString());
    circle.setAttribute('fill', color);

    let isDrag = false;
    circle.onmousedown = (ev) => {
      isDrag = true;

      dropNode.onmousemove = (ev) => {
        let cx = (ev.clientX) * 20;
        let cy = (ev.clientY) * 20;// - 1280) * -10;
        circle.setAttribute('cx', cx.toString());
        circle.setAttribute('cy', cy.toString());
        onMove(cx, cy);
      }

      dropNode.onmouseup = (ev) => {
        isDrag = false;
        dropNode.onmouseup = null;
        dropNode.onmousemove = null;
      }
    }
    parentNode.appendChild(circle);
  }
}
